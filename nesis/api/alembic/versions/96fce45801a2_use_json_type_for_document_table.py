"""use json type for document table

Revision ID: 96fce45801a2
Revises: ea840c8d9e58
Create Date: 2024-07-02 07:26:03.614939

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "96fce45801a2"
down_revision: Union[str, None] = "ea840c8d9e58"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "datasource", sa.Column("schedule", sa.Unicode(length=255), nullable=True)
    )
    op.alter_column(
        "document",
        "base_uri",
        existing_type=sa.VARCHAR(length=4096),
        type_=sa.Unicode(length=4000),
        existing_nullable=False,
    )
    op.alter_column(
        "document",
        "filename",
        existing_type=sa.VARCHAR(length=4096),
        type_=sa.Unicode(length=4000),
        existing_nullable=False,
    )
    op.alter_column(
        "document",
        "rag_metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        type_=sa.JSON(),
        existing_nullable=True,
    )
    op.alter_column(
        "document",
        "extract_metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        type_=sa.JSON(),
        existing_nullable=True,
    )
    op.alter_column(
        "document",
        "store_metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        type_=sa.JSON(),
        existing_nullable=True,
    )
    op.drop_constraint("uq_document_uuid_base_url_filename", "document", type_="unique")
    op.create_unique_constraint(
        "uq_document_uuid_datasource_id", "document", ["uuid", "datasource_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_document_uuid_datasource_id", "document", type_="unique")
    op.create_unique_constraint(
        "uq_document_uuid_base_url_filename",
        "document",
        ["uuid", "base_uri", "filename"],
    )
    op.alter_column(
        "document",
        "store_metadata",
        existing_type=sa.JSON(),
        type_=postgresql.JSONB(astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "document",
        "extract_metadata",
        existing_type=sa.JSON(),
        type_=postgresql.JSONB(astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "document",
        "rag_metadata",
        existing_type=sa.JSON(),
        type_=postgresql.JSONB(astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "document",
        "filename",
        existing_type=sa.Unicode(length=4000),
        type_=sa.VARCHAR(length=4096),
        existing_nullable=False,
    )
    op.alter_column(
        "document",
        "base_uri",
        existing_type=sa.Unicode(length=4000),
        type_=sa.VARCHAR(length=4096),
        existing_nullable=False,
    )
    op.drop_column("datasource", "schedule")
    # ### end Alembic commands ###
