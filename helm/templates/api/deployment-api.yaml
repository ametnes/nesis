{{- $fullname:= include "nesis.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-api
  labels:
    {{- include "nesis.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "nesis.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nesis.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- if .Values.imagePullSecrets }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else if .Values.api.imagePullSecrets }}
      imagePullSecrets:
      {{- with .Values.api.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init
        image: busybox:1.28
        command: ['sh', '-c', 'echo -e "Checking for the availability of database"; while ! nc -z $NESIS_API_DATABASE_HOST $NESIS_API_DATABASE_PORT; do sleep 1; printf "-"; done; echo -e " >>  server has started";']
        env:
        {{- if .Values.api.env }}
        {{- toYaml .Values.api.env | nindent 10 }}
        {{- end }}
        {{- if and .Values.postgresql .Values.postgresql.enabled }}
          - name: NESIS_API_DATABASE_HOST
            value: {{ $fullname }}-postgresql
          - name: NESIS_API_DATABASE_PORT
            value: "5432"
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http-api
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          {{- if .Values.api.customLivenessProbe }}
          livenessProbe: {{- toYaml .Values.api.customLivenessProbe | nindent 12 }}
          {{- else if .Values.api.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.api.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds }}
            failureThreshold: {{ .Values.api.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.api.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.api.livenessProbe.successThreshold }}
            terminationGracePeriodSeconds: {{ .Values.api.livenessProbe.terminationGracePeriodSeconds }}
            timeoutSeconds: {{ .Values.api.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.api.customReadinessProbe }}
          readinessProbe: {{- toYaml .Values.api.customReadinessProbe | nindent 12 }}
          {{- else if .Values.api.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.api.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds }}
            failureThreshold: {{ .Values.api.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.api.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.api.readinessProbe.successThreshold }}
            terminationGracePeriodSeconds: {{ .Values.api.readinessProbe.terminationGracePeriodSeconds }}
            timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          envFrom:
            {{- if .Values.api.config }}
            - configMapRef:
                name: {{ include "nesis.fullname" . }}-api
            {{- end }}
            {{- if .Values.api.existingSecret }}
            - secretRef:
                name: {{ .Values.api.existingSecret }}
            {{- end }}
          env:
          {{- if and .Values.postgresql .Values.postgresql.enabled }}
            - name: NESIS_API_DATABASE_URL
              value: postgresql://postgres:{{ .Values.postgresql.auth.postgresPassword }}@{{ $fullname }}-postgresql/nesis
          {{- end }}
          {{- if and .Values.rag .Values.rag.enabled }}
            - name: NESIS_API_RAG_ENDPOINT
              value: http://{{ $fullname }}-rag:8080
          {{- end }}
          {{- if and .Values.memcached .Values.memcached.enabled }}
            - name: NESIS_MEMCACHE_HOSTS
              value: {{ $fullname }}-memcached
          {{- end }}
          {{- if .Values.api.env }}
            {{- toYaml .Values.api.env | nindent 12 }}
          {{- else if .Values.api.extraEnvs }}
            {{- toYaml .Values.api.extraEnvs | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{if .Values.api.extraVolumeMounts }}
            {{- toYaml .Values.api.extraVolumeMounts | nindent 12 }}
          {{- end }}
      nodeSelector:
      {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      {{- with .Values.api.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.api.volumes }}
        {{- toYaml .Values.api.volumes | nindent 8 }}
      {{- else if .Values.api.extraVolumes -}}
        {{ toYaml .Values.api.extraVolumes | nindent 8 }}
      {{- end }}
